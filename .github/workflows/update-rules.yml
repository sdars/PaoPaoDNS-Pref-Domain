name: Update Rules and Generate Config

on:
  schedule:
    # 每天运行三次（00:00, 08:00, 16:00 UTC）
    - cron: "0 0,8,16 * * *"
  workflow_dispatch: # 手动触发
  push: # 文件更新时触发
    paths:
      - 'rule/**' # 监控 rule 文件夹中的所有文件
      - 'config/**' # 监控 config 文件夹中的所有文件

jobs:
  update-rules:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 安装 yq 用于解析 YAML 文件
      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.15.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      # 读取配置文件并合并规则
      - name: Download and merge rules
        run: |
          # 读取 application.yml 中的规则和输出路径
          REMOTE_RULES=($(yq eval '.rules.remote' config/application.yml | sed 's/- //g'))  # 获取远程规则列表
          LOCAL_RULES=($(yq eval '.rules.local' config/application.yml | sed 's/- //g'))  # 获取本地规则列表
          OUTPUT_PATH=$(yq eval '.output.path' config/application.yml)  # 获取输出目录
          OUTPUT_FILE=$(yq eval '.output.file' config/application.yml)  # 获取输出文件名
          OUTPUT_PATH=$(echo $OUTPUT_PATH | sed "s/'//g")  # 移除多余单引号
          OUTPUT_FILE=$(echo $OUTPUT_FILE | sed "s/'//g")  # 移除多余单引号
          # 创建输出目录
          mkdir -p "$OUTPUT_PATH"

          # 下载远程规则并合并
          TEMP_FILE=$(mktemp)
          for url in "${REMOTE_RULES[@]}"; do
            echo "Downloading $url..."
            url=$(echo $url | sed "s/'//g")  # 移除单引号
            curl -s "$url" >> "$TEMP_FILE"
          done

          # 合并本地规则
          echo "Merging local rules..."
          for local_file in "${LOCAL_RULES[@]}"; do
            if [ -f "$local_file" ]; then
              cat "$local_file" >> "$TEMP_FILE"
            else
              echo "Local rule file not found: $local_file"
            fi
          done

          # 去除注释和重复项
          echo "Removing duplicates and comments..."
          grep -vE '^\s*#|^\s*$' "$TEMP_FILE" | sort -u > "$OUTPUT_PATH/$OUTPUT_FILE"

          # 清理临时文件
          rm -f "$TEMP_FILE"

          echo "Merged rules saved to $OUTPUT_PATH/$OUTPUT_FILE"

      # 调试输出，确保文件存在
      - name: Check output path
        run: |
          echo "Output path: $OUTPUT_PATH"
          ls -l "$OUTPUT_PATH"

      # 提交更改到 main 分支
      - name: Push changes to main branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # 拉取远程 main 分支的最新内容
          git pull origin main

          # 切换到 main 分支
          git checkout main

          # 检查文件是否存在并添加
          if [ -f "$OUTPUT_PATH/$OUTPUT_FILE" ]; then
            git add "$OUTPUT_PATH/$OUTPUT_FILE"
            git commit -m "Updated $OUTPUT_FILE at $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
            git push origin main --force
          else
            echo "Output file not found: $OUTPUT_PATH/$OUTPUT_FILE"
          fi
