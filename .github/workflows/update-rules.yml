name: Update Rules and Generate Config

on:
  schedule:
    # 每天运行三次（00:00, 08:00, 16:00 UTC）
    - cron: "0 0,8,16 * * *"
  workflow_dispatch: # 手动触发
  push: # 文件更新时触发
    paths:
      - 'rule/**' # 监控 rule 文件夹中的所有文件
      - 'config/**' # 监控 config 文件夹中的所有文件

jobs:
  update-rules:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 安装 yq 用于解析 YAML 文件
      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.15.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      # 读取配置文件并合并规则
      - name: Download and merge rules
        run: |
          echo "Reading configuration from config/application.yml"

          # 使用 yq 获取配置
          REMOTE_RULES=$(yq e '.rules.remote[]' config/application.yml)
          LOCAL_RULES=$(yq e '.rules.local[]' config/application.yml)
          DIRECTORIES=$(yq e '.rules.directories[]' config/application.yml)
          OUTPUT_PATH=$(yq e '.output.path' config/application.yml)
          OUTPUT_FILE=$(yq e '.output.file' config/application.yml)

          # 设置默认值
          [ -z "$OUTPUT_PATH" ] && OUTPUT_PATH="output"
          [ -z "$OUTPUT_FILE" ] && OUTPUT_FILE="knightdomain.txt"

          # 创建输出目录
          echo "Creating output directory: $OUTPUT_PATH"
          mkdir -p "$OUTPUT_PATH"

          # 下载远程规则
          TEMP_FILE=$(mktemp)
          for url in $REMOTE_RULES; do
            echo "Downloading $url..."
            curl -s "$url" >> "$TEMP_FILE"
          done

          # 合并本地规则
          echo "Merging local rules..."
          for local_file in $LOCAL_RULES; do
            if [ -f "$local_file" ]; then
              cat "$local_file" >> "$TEMP_FILE"
            else
              echo "Local rule file not found: $local_file"
            fi
          done

          # 扫描并读取目录下所有文件
          echo "Scanning directories for rules..."
          for dir in $DIRECTORIES; do
            if [ -d "$dir" ]; then
              echo "Processing directory: $dir"
              for file in "$dir"/*; do
                if [ -f "$file" ]; then
                  echo "Reading file: $file"
                  cat "$file" >> "$TEMP_FILE"
                fi
              done
            else
              echo "Directory not found: $dir"
            fi
          done

          # 去除注释和重复项
          echo "Removing duplicates and comments..."
          grep -vE '^\s*#|^\s*$' "$TEMP_FILE" | sort -u > "$OUTPUT_PATH/$OUTPUT_FILE"

          # 清理临时文件
          rm -f "$TEMP_FILE"

          echo "Merged rules saved to $OUTPUT_PATH/$OUTPUT_FILE"

      # 提交更改到 main 分支
      - name: Push changes to main branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull origin main
          git checkout main

          # 提交更改
          OUTPUT_PATH=$(yq e '.output.path' config/application.yml)
          OUTPUT_FILE=$(yq e '.output.file' config/application.yml)
          git add "$OUTPUT_PATH/$OUTPUT_FILE"
          git diff --cached --quiet || git commit -m "Updated $OUTPUT_FILE at $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin main
